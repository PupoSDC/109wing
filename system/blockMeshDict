FoamFile
{
    version     2.0;
format      ascii;
class       dictionary;
object      blockMeshDict;
}
convertToMeters 1;

vertices
(
    (3.101 0.0 0.0) // 0
    (3.101165 0.002469 0.0) // 1
    (1.520081 0.11021 4.215) // 2
    (1.52 0.109 4.215) // 3
    (4.0 0.0 0.0) // 4
    (3.837972 1.12693 0.0) // 5
    (3.837972 1.12693 4.215) // 6
    (4.0 0.0 4.215) // 7
    (3.049139 0.012526 0.0) // 8
    (1.49459 0.115137 4.215) // 9
    (3.365014 2.162563 0.0) // 10
    (3.365014 2.162563 4.215) // 11
    (2.897891 0.039847 0.0) // 12
    (1.420483 0.128524 4.215) // 13
    (2.619443 3.022998 0.0) // 14
    (2.619443 3.022998 4.215) // 15
    (2.661623 0.077191 0.0) // 16
    (1.30472 0.146821 4.215) // 17
    (1.66166 3.638528 0.0) // 18
    (1.66166 3.638528 4.215) // 19
    (2.362884 0.115495 0.0) // 20
    (1.158347 0.165589 4.215) // 21
    (0.569259 3.959286 0.0) // 22
    (0.569259 3.959286 4.215) // 23
    (2.030655 0.14566 0.0) // 24
    (0.995566 0.180368 4.215) // 25
    (-0.569259 3.959286 0.0) // 26
    (-0.569259 3.959286 4.215) // 27
    (1.696793 0.159083 0.0) // 28
    (0.831984 0.186946 4.215) // 29
    (-1.66166 3.638528 0.0) // 30
    (-1.66166 3.638528 4.215) // 31
    (1.394199 0.14603 0.0) // 32
    (0.683723 0.18055 4.215) // 33
    (-2.619443 3.022998 0.0) // 34
    (-2.619443 3.022998 4.215) // 35
    (1.155771 0.108219 0.0) // 36
    (0.566901 0.162024 4.215) // 37
    (-3.365014 2.162563 0.0) // 38
    (-3.365014 2.162563 4.215) // 39
    (1.005688 0.055727 0.0) // 40
    (0.493366 0.136304 4.215) // 41
    (-3.837972 1.12693 0.0) // 42
    (-3.837972 1.12693 4.215) // 43
    (0.958 0.0 0.0) // 44
    (0.47 0.109 4.215) // 45
    (-4.0 0.0 0.0) // 46
    (-4.0 0.0 4.215) // 47
    (1.015197 -0.045558 0.0) // 48
    (0.498024 0.086678 4.215) // 49
    (-3.837972 -1.12693 0.0) // 50
    (-3.837972 -1.12693 4.215) // 51
    (1.169506 -0.072176 0.0) // 52
    (0.573631 0.073636 4.215) // 53
    (-3.365014 -2.162563 0.0) // 54
    (-3.365014 -2.162563 4.215) // 55
    (1.405178 -0.080453 0.0) // 56
    (0.689102 0.069581 4.215) // 57
    (-2.619443 -3.022998 0.0) // 58
    (-2.619443 -3.022998 4.215) // 59
    (1.699984 -0.074954 0.0) // 60
    (0.833548 0.072275 4.215) // 61
    (-1.66166 -3.638528 0.0) // 62
    (-1.66166 -3.638528 4.215) // 63
    (2.028345 -0.062321 0.0) // 64
    (0.994434 0.078465 4.215) // 65
    (-0.569259 -3.959286 0.0) // 66
    (-0.569259 -3.959286 4.215) // 67
    (2.358339 -0.045198 0.0) // 68
    (1.15612 0.086854 4.215) // 69
    (0.569259 -3.959286 0.0) // 70
    (0.569259 -3.959286 4.215) // 71
    (2.657 -0.028414 0.0) // 72
    (1.302455 0.095078 4.215) // 73
    (1.66166 -3.638528 0.0) // 74
    (1.66166 -3.638528 4.215) // 75
    (2.894833 -0.014733 0.0) // 76
    (1.418985 0.101781 4.215) // 77
    (2.619443 -3.022998 0.0) // 78
    (2.619443 -3.022998 4.215) // 79
    (3.047976 -0.005677 0.0) // 80
    (1.49402 0.106219 4.215) // 81
    (3.365014 -2.162563 0.0) // 82
    (3.365014 -2.162563 4.215) // 83
    (3.100835 -0.002469 0.0) // 84
    (1.519919 0.10779 4.215) // 85
    (3.837972 -1.12693 0.0) // 86
    (3.837972 -1.12693 4.215) // 87
);

blocks
(
  hex ( 0 1 2 3 4 5 6 7 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 1 8 9 2 5 10 11 6 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 8 12 13 9 10 14 15 11 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 12 16 17 13 14 18 19 15 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 16 20 21 17 18 22 23 19 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 20 24 25 21 22 26 27 23 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 24 28 29 25 26 30 31 27 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 28 32 33 29 30 34 35 31 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 32 36 37 33 34 38 39 35 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 36 40 41 37 38 42 43 39 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 40 44 45 41 42 46 47 43 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 44 48 49 45 46 50 51 47 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 48 52 53 49 50 54 55 51 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 52 56 57 53 54 58 59 55 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 56 60 61 57 58 62 63 59 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 60 64 65 61 62 66 67 63 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 64 68 69 65 66 70 71 67 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 68 72 73 69 70 74 75 71 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 72 76 77 73 74 78 79 75 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 76 80 81 77 78 82 83 79 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 80 84 85 81 82 86 87 83 ) (1 1 20) simpleGrading (1 1 1000)
  hex ( 84 0 3 85 86 4 7 87 ) (1 1 20) simpleGrading (1 1 1000)
);

edges
(
);

boundary
(
    wing { type wall; faces ((  0  1  2  3 )(  1  8  9  2 )(  8  12  13  9 )(  12  16  17  13 )(  16  20  21  17 )(  20  24  25  21 )(  24  28  29  25 )(  28  32  33  29 )(  32  36  37  33 )(  36  40  41  37 )(  40  44  45  41 )(  44  48  49  45 )(  48  52  53  49 )(  52  56  57  53 )(  56  60  61  57 )(  60  64  65  61 )(  64  68  69  65 )(  68  72  73  69 )(  72  76  77  73 )(  76  80  81  77 )(  80  84  85  81 )(  84  0  3  85 ));}
    freestream { type patch; faces ((  4  5  6  7 )(  5  10  11  6 )(  10  14  15  11 )(  14  18  19  15 )(  18  22  23  19 )(  22  26  27  23 )(  26  30  31  27 )(  30  34  35  31 )(  34  38  39  35 )(  38  42  43  39 )(  42  46  47  43 )(  46  50  51  47 )(  50  54  55  51 )(  54  58  59  55 )(  58  62  63  59 )(  62  66  67  63 )(  66  70  71  67 )(  70  74  75  71 )(  74  78  79  75 )(  78  82  83  79 )(  82  86  87  83 )(  86  4  7  87 ));}
    left { type symmetry; faces ((  0  1  4  5 )(  1  8  5  10 )(  8  12  10  14 )(  12  16  14  18 )(  16  20  18  22 )(  20  24  22  26 )(  24  28  26  30 )(  28  32  30  34 )(  32  36  34  38 )(  36  40  38  42 )(  40  44  42  46 )(  44  48  46  50 )(  48  52  50  54 )(  52  56  54  58 )(  56  60  58  62 )(  60  64  62  66 )(  64  68  66  70 )(  68  72  70  74 )(  72  76  74  78 )(  76  80  78  82 )(  80  84  82  86 )(  84  0  86  4 ));}
);

mergePatchPairs
(
);
